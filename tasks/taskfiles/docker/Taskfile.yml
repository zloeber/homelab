desc: Docker tasks
version: '3'
vars:
  PROJECT_BIN_PATH: '{{default "~/.local/bin" .PROJECT_BIN_PATH}}'
  rover: '{{.PROJECT_BIN_PATH}}/rover'
  ROVER_VERSION: '{{default "0.2.2" .ROVER_VERSION}}'
  DOCKER_BUILDKIT: 1
  DOCKER_SERVER: '{{default "registry.nmlv.nml.com" .DOCKER_SERVER}}'
  DOCKER_FILE: '{{default "Dockerfile" .DOCKER_FILE}}'
  DOCKER_PATH: '{{default "." .DOCKER_PATH}}'
  DOCKER_EXTRACT_PATH: '{{default "." .DOCKER_EXTRACT_PATH}}'
  DOCKER_IMAGE: '{{default "." .PROJECT}}'
  docker: docker
  IS_CI: '{{default 0 .IS_CI}}'

tasks:
  show:
    desc: Show terraform variables for this task
    silent: true
    cmds:
    - |
      echo "PROJECT_BIN_PATH: {{.PROJECT_BIN_PATH}}"
      echo "DOCKER_IMAGE: {{.DOCKER_IMAGE}}"
      echo "DOCKER_FILE: {{.DOCKER_FILE}}"
      echo "DOCKER_PATH: {{.DOCKER_PATH}}"
      echo "VERSION: {{.VERSION}}"

  install:rover:
    desc: Install local rover binary
    silent: true
    cmds:
    - |
      rm -rf "/tmp/rover"
      mkdir -p {{.PROJECT_BIN_PATH}}
      mkdir -p /tmp/rover
      curl --retry 3 --retry-delay 5 --fail -sSL -L -o /tmp/rover/rover.zip \
        https://github.com/im2nguyen/rover/releases/download/v{{.ROVER_VERSION}}/rover_{{.ROVER_VERSION}}_{{OS}}_{{ARCH}}.zip
      unzip /tmp/rover/rover.zip -d /tmp/rover
      mv /tmp/rover/rover_v{{.ROVER_VERSION}} {{.rover}}
      chmod +x {{.rover}}

  login:
    desc: Login to container registry
    silent: true
    cmds:
      - |
        {{.docker}} login {{.DOCKER_SERVER}}

  tag:
    desc: Tag container image
    silent: true
    cmds:
      - |
        {{.docker}} tag {{.DOCKER_IMAGE}}:local {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.GIT_COMMIT}}
        {{.docker}} tag {{.DOCKER_IMAGE}}:local {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.VERSION}}
        {{.docker}} tag {{.DOCKER_IMAGE}}:local {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:latest

  push:
    desc: Push tagged images to registry
    silent: true
    cmds:
      - |
        echo "Pushing container image to registry: latest {{.VERSION}} {{.GIT_COMMIT}}"
        {{.docker}} push {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.GIT_COMMIT}}
        {{.docker}} push {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.VERSION}}
        {{.docker}} push {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:latest

  run:
    desc: Run a local container image for the app
    silent: true
    cmds:
      - |
        {{.docker}} run -t --rm -i --name={{.DOCKER_IMAGE}} {{.DOCKER_IMAGE}}:local

  scan:
    desc: Run a {{.docker}} snyk security scan
    silent: true
    cmds:
      - |
        {{.docker}} scan {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:latest

  shell:
    desc: Run a local container image for the app
    silent: true
    cmds:
      - |
        {{.docker}} run -t --rm -i --name={{.DOCKER_IMAGE}} {{.DOCKER_IMAGE}}:local /bin/bash

  extract:
    #desc: Example of using buildkit to extract files from an image
    silent: true
    cmds:
      - |
        mkdir -p {{.ROOT_PATH}} /.local/artifacts
        {{.docker}} build -f {{.DOCKER_FILE}} \
          --target artifact \
            --output type=local,dest=./.local/artifacts .

  build:
    desc: Build container image
    silent: true
    cmds:
      - |
        {{.docker}} build {{.DOCKER_BUILD_ARGS}} -t {{.DOCKER_IMAGE}}:local -f {{.DOCKER_FILE}} {{.DOCKER_PATH}}

  lint:
    #desc: Perform tflint on current terraform
    silent: true
    cmds:
    - echo "TBD"

  format:
    #desc: Perform terraform format on current codebase
    silent: true
    cmds:
    - echo "TBD"

  clean:
    desc: Clean local cached {{.docker}} elements
    silent: true
    cmds:
    - |
      {{.docker}} system prune

