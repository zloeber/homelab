apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-bridge
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: telegram-bridge
  template:
    metadata:
      labels:
        app: telegram-bridge
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: load-config
          image: docker.io/grubertech/envsubst:v1.2.0
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - -c
            - |
              envsubst -no-empty -i /template/config.yaml.tmpl -o /load/config.yaml \
              && cp -f /load/config.yaml /data/config.yaml
          env:
            - name: BRIDGE_DB_USERNAME
              valueFrom: { secretKeyRef: { name: matrix.db-bridges.credentials.postgresql.acid.zalan.do, key: username } }
            - name: BRIDGE_DB_PASSWORD
              valueFrom: { secretKeyRef: { name: matrix.db-bridges.credentials.postgresql.acid.zalan.do, key: password } }
            - name: SHARED_SECRET
              valueFrom: { secretKeyRef: { name: synapse-shared, key: SHARED_SECRET } }
            - name: APP_ID
              valueFrom: { secretKeyRef: { name: synapse-shared, key: TELEGRAM_API_ID } }
            - name: APP_API_HASH
              valueFrom: { secretKeyRef: { name: synapse-shared, key: TELEGRAM_API_HASH } }
          volumeMounts:
            - name: config
              mountPath: /data
            - name: temp-dir
              mountPath: /load
            - name: template
              mountPath: /template
              readOnly: true
          resources:
            limits:
              cpu: 400m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 512Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
        - name: generate-config
          image: dock.mau.dev/mautrix/telegram:v0.12.1
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          env:
            - name: MAUTRIX_DIRECT_STARTUP
              value: "true"
          args:
            - -c
            - |
              python3 -m mautrix_telegram \
              -g -c "/data/config.yaml" \
              -r "/bridges/telegram.yaml"
          volumeMounts:
            - name: config
              mountPath: /data
            - name: bridges
              mountPath: /bridges
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      containers:
        - name: bridge
          image: dock.mau.dev/mautrix/telegram:v0.12.1
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          env:
            - name: MAUTRIX_DIRECT_STARTUP
              value: "true"
          args:
            - -c
            - |
              python3 -m mautrix_telegram \
              -n -c "/data/config.yaml"
          ports:
            - name: bridge
              containerPort: 29317
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 29317
            periodSeconds: 15
            initialDelaySeconds: 30
          readinessProbe:
            tcpSocket:
              port: 29317
            periodSeconds: 5
            initialDelaySeconds: 10
          startupProbe:
            tcpSocket:
              port: 29317
            periodSeconds: 30
            initialDelaySeconds: 120
          volumeMounts:
            - name: config
              mountPath: /data
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      volumes:
      - name: template
        configMap:
          name: telegram-bridge-config
          items:
          - key: config.yaml.tmpl
            path: config.yaml.tmpl
      - name: temp-dir
        emptyDir: {}
      - name: config
        persistentVolumeClaim:
          claimName: telegram-bridge-data
      - name: bridges
        persistentVolumeClaim:
          claimName: bridge-config-storage
