apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: chaos-mesh
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster
  source:
    repoURL: https://charts.botkube.io
    chart: chaos-mesh
    targetRevision: 2.5.0
    helm:
      releaseName: chaos-mesh
      values: |
        bpfki:
          create: false
          grpcPort: 50051
          image:
            repository: chaos-mesh/chaos-kernel
          imagePullPolicy: IfNotPresent
        chaosDaemon:
          grpcPort: 31767
          hostNetwork: false
          httpPort: 31766
          image:
            repository: chaos-mesh/chaos-daemon
          imagePullPolicy: IfNotPresent
          mtls:
            enabled: true
          nodeSelector:
            kubernetes.io/hostname: node-one
          podSecurityPolicy: false
          privileged: true
          resources:
            limits:
              cpu: 150m
              memory: 300Mi
            requests:
              cpu: 25m
              memory: 128Mi
          runtime: docker
          serviceAccount: chaos-daemon
          socketPath: /var/run/docker.sock
        chaosDlv:
          enable: false
          image:
            repository: chaos-mesh/chaos-dlv
          imagePullPolicy: IfNotPresent
        clusterScoped: true
        controllerManager:
          allowHostNetworkTesting: false
          chaosdSecurityMode: true
          enableFilterNamespace: false
          enabledControllers:
          - '*'
          enabledWebhooks:
          - '*'
          env:
            METRICS_PORT: 10080
            WEBHOOK_PORT: 10250
          hostNetwork: false
          image:
            repository: chaos-mesh/chaos-mesh
          imagePullPolicy: IfNotPresent
          leaderElection:
            enabled: true
            leaseDuration: 15s
            renewDeadline: 10s
            retryPeriod: 2s
          nodeSelector:
            kubernetes.io/hostname: node-one
          podChaos:
            podFailure:
              pauseImage: gcr.io/google-containers/pause:latest
          replicaCount: 1
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 25m
              memory: 256Mi
          service:
            type: ClusterIP
          serviceAccount: chaos-controller-manager
          targetNamespace: chaos-mesh
        dashboard:
          create: true
          env:
            CLEAN_SYNC_PERIOD: 12h
            DATABASE_DATASOURCE: /data/core.sqlite
            DATABASE_DRIVER: sqlite3
            LISTEN_HOST: 0.0.0.0
            LISTEN_PORT: 2333
            METRIC_HOST: 0.0.0.0
            METRIC_PORT: 2334
            TTL_EVENT: 168h
            TTL_EXPERIMENT: 336h
            TTL_SCHEDULE: 336h
            TTL_WORKFLOW: 336h
          gcpSecurityMode: false
          hostNetwork: false
          image:
            repository: chaos-mesh/chaos-dashboard
          imagePullPolicy: IfNotPresent
          ingress:
            certManager: false
            enabled: false
            hosts:
            - name: dashboard.local
              tls: false
              tlsSecret: dashboard.local-tls
            paths:
            - /
          nodeSelector:
            kubernetes.io/hostname: node-one
          persistentVolume:
            enabled: false
            mountPath: /data
            size: 8Gi
            storageClassName: standard
          replicaCount: 1
          resources:
            limits:
              cpu: 150m
              memory: 300Mi
            requests:
              cpu: 25m
              memory: 128Mi
          rootUrl: http://localhost:2333
          securityMode: true
          service:
            type: NodePort
          serviceAccount: chaos-dashboard
        dnsServer:
          create: false
          env:
            LISTEN_HOST: 0.0.0.0
            LISTEN_PORT: 53
          grpcPort: 9288
          image: pingcap/coredns:v0.2.1
          imagePullPolicy: IfNotPresent
          name: chaos-mesh-dns-server
          nodeSelector:
            kubernetes.io/hostname: node-one
          replicas: 1
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          serviceAccount: chaos-dns-server
        enableCtrlServer: true
        enableProfiling: true
        images:
          registry: ghcr.io
          tag: latest
        prometheus:
          create: false
          image: prom/prometheus:v2.18.1
          imagePullPolicy: IfNotPresent
          nodeSelector:
            kubernetes.io/hostname: node-one
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 250m
              memory: 512Mi
          service:
            type: ClusterIP
          serviceAccount: prometheus
          volume:
            storage: 2Gi
            storageClassName: standard
        rbac:
          create: true
        timezone: America/Sao_Paulo
        webhook:
          CRDS:
          - podchaos
          - iochaos
          - timechaos
          - networkchaos
          - kernelchaos
          - stresschaos
          - awschaos
          - azurechaos
          - gcpchaos
          - dnschaos
          - jvmchaos
          - schedule
          - workflow
          - httpchaos
          - blockchaos
          - physicalmachinechaos
          - physicalmachine
          - statuscheck
          - remotecluster
          FailurePolicy: Fail
          certManager:
            enabled: false
          timeoutSeconds: 5
  destination:
    namespace: monitoring
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: 5
      backoff:
        duration: 20s
        factor: 2
        maxDuration: 15m
